#!/bin/bash
# Turn on the lemonbar in various monitors
# This works well, but it has the inconvenient that it redraws the lemonbar at every iteration thus greatly affecting the performance.
# The script will be saved for its interest, but I don't plan to use it.

# Refresh the pipe
[ -e "$LLIMA_FIFO" ] && rm "$LLIMA_FIFO"
mkfifo "$LLIMA_FIFO"
exec 3<> "$LLIMA_FIFO"

# Turn the modules on
bspc subscribe report > "$LLIMA_FIFO" &
DIR="$HOME/.local/bin/modules"
$DIR/cpu > "$LLIMA_FIFO" &
$DIR/date > "$LLIMA_FIFO" &
$DIR/memory > "$LLIMA_FIFO" &
echo "V" > "$LLIMA_FIFO"

# Import bar configuration
. $HOME/.local/share/global-style

# Create the calls to lemonbar
# For each monitor, this creates a call to a lemonbar, and the input is directed to all of them using tee.
# We create the command as a string for performance purposes
FIRST_COMMAND=
SECOND_COMMAND="tee"
first=0
for monitor in $(bspc query -M --names); do
	COMMAND_L="grep $monitor | cut -d ';' -f 2"
	bar_width=$(xrandr | grep -w "$monitor" | sed 's/ primary//' | awk -F'[ x]' '{print $3 - 20}')
	bar_offset_x=$(xrandr | grep -w "$monitor" | sed 's/ primary//' | awk -F'[ \+x]' '{print $5 + 10}')
	COMMAND_L="$COMMAND_L | lemonbar -a 32 -u 2 -g ${bar_width}x${BAR_HEIGHT}+${bar_offset_x}+5  -f \"$BAR_FONT\" -F \"$COLOR_FOREGROUND\" -B \"$COLOR_BACKGROUND\" -U \"$COLOR_UNDERLINE\" | sh &"
	if [ $first -eq 0 ]; then
		first=1
		FIRST_COMMAND="$COMMAND_L"
	else
		SECOND_COMMAND="$SECOND_COMMAND >($COMMAND_L)"
	fi
done

if [ "$(bspc query -M | wc -l)" -eq 1 ]; then
	COMMAND="$FIRST_COMMAND"
else
	COMMAND="$SECOND_COMMAND | $FIRST_COMMAND"
fi
COMMAND="bar-updater-multiple <\"\$LLIMA_FIFO\" | $COMMAND"

# Actual call
#echo "$COMMAND"
eval "$COMMAND"

# Wait
wait
